name: CI/CD - Eventify Microservices Spring Boot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ "eventify-name-server", "eventify-config-server", "eventify-api-gateway", "event-service" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build service ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          ./mvnw clean package -DskipTests

      - name: Login on Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_SECRET }}

      - name: Build Docker Image
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/app  
            docker-compose pull
            docker-compose up -d
          EOF
